import { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';

import { TaskEntity } from '@/tasks/entities/task.entity';

import { CreateSubTaskDto } from '../dto/create-sub-task.dto';

@Entity({ name: 'sub-tasks' })
export class SubTaskEntity {
  @PrimaryGeneratedColumn()
  id: number;

  @Column()
  title: string;

  @Column({ type: 'varchar' })
  createDate: string;

  @Column({ type: 'varchar', nullable: true })
  relatedDate: string;

  @Column({ type: 'varchar', default: null, nullable: true })
  completeDate: string | null;

  @Column({ default: false })
  isAutoGenerated: boolean;

  @ManyToOne(() => TaskEntity, (task) => task.subTasks, { onDelete: 'CASCADE' })
  task: TaskEntity;

  constructor(payload: CreateSubTaskDto) {
    if (!payload) return;
    this.title = payload.title;
    this.createDate = new Date().toISOString();
  }
}
